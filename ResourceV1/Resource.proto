syntax = "proto3";

package com.incarcloud.resource_1.std;

//资源信息拉取请求
message ResourceInfoPullRequest{
    //文件资源唯一标识符(用于区别不同的资源之间)
    string id= 1 ;
}

//资源信息拉取响应
message ResourceInfoPullResponse{
    //响应编码(1:成功;2:资源不存在;3:其他失败原因)
    string code=1;
    //资源版本(若资源产生更新则版本会累加)
    int32 version =2 ;
    //是否完整资源
    bool complete =3;
    //资源碎片信息(包头不包尾)
    //完整的资源只包含一个碎片(例如大小为1kb资源表示为0-1024)
    //不完整的资源包含多个碎片(例如大小为1kb资源可能表示为0-10,10-100,120-200,500-1000,1000-1024)
    string fragment=4;
}

//资源数据拉取请求
message ResourceDataPullRequest{
    //资源唯一标识符(用于区别不同的资源之间)
    string id= 1 ;
    //资源版本
    int32 version=2;
    //资源开始位置(0代表从头,包括)
    int32 start=3;
    //资源开始位置(-1代表到结束,不包括)
    int32 end=4;
}

//资源数据拉取响应
message ResourceDataPullResponse{
    //响应编码(1:成功;2:资源不存在;3:拉取资源内容的片段不存在;4:其他失败原因)
    int32 code = 1;
    //最新资源信息版本
    int32 version=2;
    //数据内容
    bytes data = 3;
}

//资源信息生成请求
message ResourceInfoPushRequest{
}

//资源信息生成响应
message ResourceInfoPushResponse{
    //响应编码(1:生成资源成功;2:其他失败原因)
    int32 code = 1;
    //资源唯一标识符
    string id =2 ;
}

//资源数据推送请求
message ResourceDataPushRequest{
    //资源唯一标识符
    string id =1 ;
    //推送此段资源数据开始位置
    int32 start=2;
    //此段资源数据
    bytes data=3;
    //是否是最后一段资源
    bool finish=4;
}

//资源信息生成响应
message ResourceDataPushResponse{
    //响应编码(1:资源推送成功;2:资源不存在;3:推送的资源数据位置重复;3:其他失败原因)
    int32 code = 1;
}

service ResourceService{
    //拉取资源信息
    rpc pullInfo(ResourceInfoPullRequest) returns (ResourceInfoPullResponse);

    //拉取资源内容
    rpc pullData(ResourceDataPullRequest) returns (ResourceDataPullResponse);

    //推送资源信息
    rpc pushInfo(ResourceInfoPushRequest) returns (ResourceInfoPushResponse);

    //推送资源内容
    rpc pushData(ResourceDataPushRequest) returns (ResourceDataPushResponse);

}


